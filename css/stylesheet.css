div {
  margin: 50px;
  display: inline-block;
}

li {
  list-style-type: none;
  display: block;
}

.element{
  width: 200px;
  height: 200px;
  background-color: coral;
  animation: square-to-circle 2s 1s infinite cubic-bezier(1,.015,.295,1.225) alternate;;
  -webkit-animation: square-to-circle 2s 1s infinite cubic-bezier(1,.015,.295,1.225) alternate;;
}

.original{
  margin: 50px;
  width: 200px;
  height: 200px;
  background-color: coral;
}

.first{
  margin: 50px;
  width: 200px;
  height: 200px;
  background-color: darksalmon;
  border-radius:50% 0 0 0;
  transform: rotate(45deg);
}

.second{
  margin: 50px;
  width: 200px;
  height: 200px;
  background-color: indianred;
  border-radius:50% 50% 0 0;
  transform: rotate(90deg);
}

.third{
  margin: 50px;
  width: 200px;
  height: 200px;
  background-color: lightcoral;
  border-radius:50% 50% 50% 0;
  transform: rotate(135deg);
}

.fourth{
  margin: 50px;
  width: 200px;
  height: 200px;
  background: darksalmon;
  border-radius:50%;
  transform: rotate(180deg);
}

@keyframes square-to-circle {
  0%  {
    border-radius:0 0 0 0;
    background:coral;
    transform: rotate(0deg);
  }
  25%  {
    border-radius:50% 0 0 0;
    background: darksalmon;
    transform: rotate(45deg);
  }
  50%  {
    border-radius:50% 50% 0 0;
    background: indianred;
    transform: rotate(90deg);
  }
  75%  {
    border-radius:50% 50% 50% 0;
    background: lightcoral;
    transform: rotate(135deg);
  }
  100% {
    border-radius:50%;
    background: darksalmon;
    transform: rotate(180deg);
  }
}

@-webkit-keyframes square-to-circle {
  0%  {
    border-radius:0 0 0 0;
    background:coral;
    transform: rotate(0deg);
  }
  25%  {
    border-radius:50% 0 0 0;
    background: darksalmon;
    transform: rotate(45deg);
  }
  50%  {
    border-radius:50% 50% 0 0;
    background: indianred;
    transform: rotate(90deg);
  }
  75%  {
    border-radius:50% 50% 50% 0;
    background: lightcoral;
    transform: rotate(135deg);
  }
  100% {
    border-radius:50%;
    background: darksalmon;
    transform: rotate(180deg);
  }
}

/*BASIC CONCEPTS OF CSS3 ANIMATIONS
CSS animation enables us to create animations without JavaScript by using a set of keyframes.
Unlike CSS transitions, keyframe animations are currently supported only in Webkit browsers and Firefox and soon in IE 10. Unsupported browsers will simply ignore your animation code.
The animation property has eight subproperties:

animation-delay
Defines when the animation starts.

animation-direction
Sets the animation to play in reverse on alternate cycles.

animation-duration
Defines the length of time an animation takes to complete one cycle.

animation-iteration-count
Defines the number of times an animation cycle should play before stopping.

animation-name
Specifies the name of the @keyframes rule.

animation-play-state
Determines whether an animation is running or paused.

animation-timing-function
Describes how an animation progresses over one cycle.

animation-fill-mode
Specifies how a CSS animation should apply styles to its target before and after executing.*/